import tkinter as tk
import subprocess
from tkinter import *
from tkinter import filedialog
import signature_based_detection
import training
import shutil

class Main(tk.Frame):
    def __init__(self, root):
        super().__init__(root)
        self.path = ""
        self.directory = ""
        self.init_main()
        self.folder_selected = ""

    def init_main(self, resstr = []):
        toolbar = tk.Frame(bg='#d7d8e0', bd=2)
        toolbar.pack(side=tk.TOP, fill=tk.X)

        self.logo = tk.PhotoImage(file='./image/logo.gif')
        logo = tk.Button(toolbar, compound=tk.TOP, image=self.logo)
        logo.pack(side=tk.TOP)
        logo.config(bd=2, relief=tk.SUNKEN)

        self.add_img = tk.PhotoImage(file='./image/scan.gif')
        btn_open_dialog = tk.Button(toolbar, text='Scan Virus', command=self.signaturebased, bg='#d7d8e0', bd=0,
                                    compound=tk.TOP, image=self.add_img )
        btn_open_dialog.pack(side=tk.LEFT)
        btn_open_dialog.config(bd=4, fg='blue')

        self.add_img2 = tk.PhotoImage(file='./image/train.gif')
        btn_open_dialog2 = tk.Button(toolbar, text='Training', command=self.training, bg='#d7d8e0', bd=0,
                                     compound=tk.TOP, image=self.add_img2)
        btn_open_dialog2.pack(side=tk.LEFT)
        btn_open_dialog2.config(bd=4, fg='blue')

        c = Canvas(toolbar, bg='white', width=450, height=450)
        c.pack()
        y = 0
        for i in resstr:
            c.create_text(180, 50 + y, text=i, fill="red")
            y += 15
        toolbar.pack()
        root.update()

    def signaturebased(self):
        self.folder_selected = ""
        self.folder_selected = filedialog.askdirectory(title='Please select a directory')
        print(self.folder_selected)
        result = []
        if len(self.folder_selected) > 0:
            signaturebased = signature_based_detection.SignatureBased(self.folder_selected)
            result = signaturebased.check_folder()
            shutil.rmtree(self.folder_selected + "/opcode")
            print(result)

        list = root.pack_slaves()
        for l in list:
            l.destroy()
        root.update()

        self.init_main(result)

    def training(self):
        self.folder_selected = ""
        self.folder_selected = filedialog.askdirectory(title='Please select a directory')
        print(self.folder_selected)
        if len(self.folder_selected) > 0:
            train = training.Training(self.folder_selected)
            train.run()

        list = root.pack_slaves()
        for l in list:
            l.destroy()
        root.update()
        result = []
        result.append("Training is finished\n")
        self.init_main(result)

if __name__ == "__main__":
    root = tk.Tk()
    app = Main(root)
    app.pack()
    root.title("Malware Snarer")
    root.geometry("800x500+300+200")
    root.resizable(False, False)
    root.mainloop()
